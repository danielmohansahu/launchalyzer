<launch>
  <arg name="name" default="$(optenv ROS_PLATFORM_NAME robot)"/>

  <!-- location to use for GPS initial pose (hardcoded from lejeune -->
  <!-- options: "marketplace", -->
  <arg name="location" default="UNKNOWN" />

  <remap from="from" to="to" />

  <arg name="lejeune" default="true"/>

  <arg name="dynamic_objects" default="true"/>

  <arg name="stereo_tracker" default="true"/>

  <arg name="perception_model" default="all_three_extra_case"/>
  <arg name="use_maskrcnn" default="true" />

  <arg name="t2_model" default="false"/>

  <arg unless="$(arg t2_model)" name="maskrcnn_model" default="model_lejeune_whole_batch.pth"/>
  <arg unless="$(arg t2_model)" name="maskrcnn_config" default="e2e_faster_rcnn_R_50_FPN_1x_lejeune_whole_batch.yaml"/>

  <arg if="$(arg t2_model)"
       name="maskrcnn_config"   default="e2e_faster_rcnn_R_50_FPN_1x_t2_v1.yaml"/>
  <arg if="$(arg t2_model)"
       name="maskrcnn_model"  value="t2_v1_0007500.pth"/>
  
  <group if="true">
    <arg name="Test" value="$(arg name)vision" />
  </group>

  <machine name="vision"
           address="$(arg name)vision"
           default="never"
           env-loader="/opt/ros/rcta/env.sh" user="robot"/>

  <!-- Enable robot with subsystems -->
  <include file="$(find rcta_launch)/launch/robot.launch">
    <arg name="name" value="$(arg name)" />

    <!-- Robot platform hardware -->
    <arg name="plat" value="true" />

    <!-- Robot odometry -->
    <arg name="odom" value="true" />

    <!-- Robot mapping and navigation -->
    <arg name="laser" value="true" />
    <arg name="slam" value="true" />
    <arg name="navigation" value="true" />

    <!-- Enable RCTA world model -->
    <arg name="wm" value="true" />
    <!-- T2C2 World Model configuration -->
    <arg name="wmconfig" value="T2C2.cfg" />

    <!-- Intelligence architecture -->
    <arg name="intelligence" value="true" />

    <arg name="camera" value="true"/>
    <arg name="camera_machine" value="vision"/>

    <arg name="object_detection" value="true"/>
    <arg name="object_detection_machine" value="vision"/>

    <arg name="use_maskrcnn_benchmark" value="$(arg use_maskrcnn)"/>

    <arg if="$(arg use_maskrcnn)"
         name="object_detection_config" value="$(arg maskrcnn_config)"/>
    <arg if="$(arg use_maskrcnn)"
         name="object_detection_model"  value="$(arg maskrcnn_model)"/>

    <arg unless="$(arg use_maskrcnn)"
         name="object_detection_model" value="ZF_faster_rcnn_$(arg perception_model).caffemodel"/>
    <!-- Options: ZF_faster_rcnn_<alley, all_three_extra_case, crate_plus_three, final>.caffemodel -->

    <arg name="object_tracking" value="true"/>
    <arg name="object_tracking_machine" value="vision"/>

    <arg if="$(arg stereo_tracker)" name="person_tracking" value="true"/>
    <arg if="$(arg stereo_tracker)" name="person_tracking_machine" value="vision"/>

    <arg name="object_localization" value="true" />

    <arg name="unreliable_communication" value="true" />

    <arg name="mmi" value="true"/>

    <arg name="lejeune" value="$(arg lejeune)"/>
  </include>

  <!-- Object semantics remapping -->
  <rosparam
    ns="/$(arg name)/world_model"
    param="remappings"
    file="$(find t2_launch)/config/t2_semantics.yaml"
    />

  <!-- Fix a GPS-Map transform -->
  <group if="$(eval arg('location')=='marketplace')">
    <rosparam param="$(arg name)/omnigraph/gps_init_pose">[24.095, 12.254, 0, -1.847]</rosparam>
  </group>
  <group if="$(eval arg('location')=='UNKNOWN')">
    <rosparam param="$(arg name)/omnigraph/gps_init_pose">[0, 0, 0]</rosparam>
  </group>

  <param name="/$(arg name)/discrete_objects_cache/wm_object_track_threshold" value="1.5"/>
  <param name="/$(arg name)/discrete_objects_cache/wm_object_removal" value="true"/>

  <param name="/$(arg name)/local_planner/max_vel_x" value="0.75"/>
  <param name="/$(arg name)/local_planner/default_vel_x" value="0.5"/>
  <param name="/$(arg name)/goto_object_behavior/object_goal_radius" value="0.5"/>

  <!-- To detect curbs at B507 -->
  <param name="/$(arg name)/point_cloud_cache/ground_classifier/height_threshold" value="0.04"/>
  <param name="/$(arg name)/point_cloud_cache/ground_classifier/lethal_height_threshold" value="0.10"/>

  <!-- Enable robot teleoperation -->
  <include file="$(find rcta_teleop)/launch/teleop.launch">
    <arg name="name" value="$(arg name)" />
  </include>

  <!-- Add 'goto object' behavior -->
  <include file="$(find t2_launch)/launch/navigation.launch">
    <arg name="name" value="$(arg name)" />
  </include>

  <group if="true" >
    <include unless="$(arg stereo_tracker)" file="$(find t2_launch)/launch/scene_description.launch">
      <arg name="name" value="blah" />
      <arg name="machine" value="vision"/>
    </include>
  </group>

  <!-- Add 'report' behavior -->
  <include unless="$(arg stereo_tracker)" file="$(find t2_launch)/launch/scene_description.launch">
    <arg name="name" value="$(arg name)" />
    <arg name="machine" value="vision"/>
  </include>

  <group if="$(arg dynamic_objects)" ns="$(arg name)">
    <node pkg="dynamic_object_mapping" type="dynamic_object_mapping_node" name="dynamic_object_mapping" output="screen">
      <param name="static_frame" value="$(arg name)/map"/>
      <param name="max_association_distance" value="1.0"/>
      <param name="object_lifetime" value="1.0"/>
    </node>
  </group>

</launch>
